// src/pages/ProjectDetailPage.jsx

import React, { useState, useEffect, useCallback } from 'react';
import { useParams, useNavigate } from 'react-router-dom';
import axios from 'axios';
import CreateApiDocForm from '../components/CreateApiDocForm';
import './ProjectDetailPage.css';

const ProjectDetailPage = () => {
    const { project_id } = useParams();
    const navigate = useNavigate();

    const [apiDocs, setApiDocs] = useState([]);
    const [isLoading, setIsLoading] = useState(true);
    const [error, setError] = useState('');
    
    // ‚ú® ÏàòÏ†ï: ÌôïÏû•Îêú Î¨∏ÏÑúÏùò IDÏôÄ ÏÉÅÏÑ∏ Îç∞Ïù¥ÌÑ∞Î•º Î≥ÑÎèÑÎ°ú Í¥ÄÎ¶¨Ìï©ÎãàÎã§.
    const [expandedDocId, setExpandedDocId] = useState(null);
    const [detailedDoc, setDetailedDoc] = useState(null);
    const [isDetailLoading, setIsDetailLoading] = useState(false);

    const [isCreating, setIsCreating] = useState(false);

    const fetchApiDocs = useCallback(async () => {
        setIsLoading(true);
        const accessToken = localStorage.getItem('accessToken');
        if (!accessToken) {
            navigate('/login');
            return;
        }

        try {
            const response = await axios.get(
                `https://autoreactgenerator-g8g9bge3heh0addq.koreasouth-01.azurewebsites.net/api/apidocs/${project_id}/`,
                { headers: { 'Authorization': `Bearer ${accessToken}` } }
            );
            setApiDocs(response.data);
            setError('');
        } catch (err) {
            console.error("API Î¨∏ÏÑú Í∞ÄÏ†∏Ïò§Í∏∞ Ïã§Ìå®:", err);
            setError("API Î¨∏ÏÑúÎ•º Î∂àÎü¨Ïò¨ Ïàò ÏóÜÏäµÎãàÎã§. Îã§Ïãú ÏãúÎèÑÌï¥Ï£ºÏÑ∏Ïöî.");
            if (err.response?.status === 401) navigate('/login');
        } finally {
            setIsLoading(false);
        }
    }, [project_id, navigate]);

    useEffect(() => {
        fetchApiDocs();
    }, [fetchApiDocs]);

    const handleCreateSuccess = () => {
        setIsCreating(false);
        fetchApiDocs();
    };
    
    // ‚ú® ÏàòÏ†ï: ÏÉÅÏÑ∏ Ï†ïÎ≥¥ Ï°∞Ìöå Î°úÏßÅ Ï∂îÍ∞Ä
    const handleToggleDetail = async (docId) => {
        // Ïù¥ÎØ∏ Ïó¥Î†§ÏûàÎäî Î¨∏ÏÑúÎ•º Îã§Ïãú ÌÅ¥Î¶≠ÌïòÎ©¥ Îã´ÏäµÎãàÎã§.
        if (expandedDocId === docId) {
            setExpandedDocId(null);
            setDetailedDoc(null);
            return;
        }

        // ÏÉàÎ°úÏö¥ Î¨∏ÏÑúÎ•º ÌÅ¥Î¶≠ÌïòÎ©¥ ÏÉÅÏÑ∏ Ï†ïÎ≥¥Î•º Î∂àÎü¨ÏòµÎãàÎã§.
        setExpandedDocId(docId);
        setIsDetailLoading(true);
        setDetailedDoc(null); // Ïù¥Ï†Ñ Îç∞Ïù¥ÌÑ∞ Ï¥àÍ∏∞Ìôî

        const accessToken = localStorage.getItem('accessToken');
        if (!accessToken) {
            navigate('/login');
            return;
        }

        try {
            const response = await axios.get(
                `https://autoreactgenerator-g8g9bge3heh0addq.koreasouth-01.azurewebsites.net/api/apidocs/detail/${docId}/`,
                { headers: { 'Authorization': `Bearer ${accessToken}` } }
            );
            setDetailedDoc(response.data);
        } catch (err) {
            console.error("API ÏÉÅÏÑ∏ Ï†ïÎ≥¥ Í∞ÄÏ†∏Ïò§Í∏∞ Ïã§Ìå®:", err);
            setError("ÏÉÅÏÑ∏ Ï†ïÎ≥¥Î•º Î∂àÎü¨Ïò§Îäî Îç∞ Ïã§Ìå®ÌñàÏäµÎãàÎã§.");
            if (err.response?.status === 401) navigate('/login');
        } finally {
            setIsDetailLoading(false);
        }
    };

    const getMethodClass = (method) => `method-${method.toLowerCase()}`;
    
    // ‚ú® Ï∂îÍ∞Ä: Í∞ùÏ≤¥Í∞Ä ÎπÑÏñ¥ÏûàÎäîÏßÄ ÌôïÏù∏ÌïòÎäî Ìó¨Ìçº Ìï®Ïàò
    const isObjectNotEmpty = (obj) => obj && Object.keys(obj).length > 0;

    if (isLoading && apiDocs.length === 0) {
        return <div className="detail-container"><h1>API Î¨∏ÏÑú Î°úÎî© Ï§ë...</h1></div>;
    }

    if (error) {
        return <div className="detail-container"><h1 className="error-message">{error}</h1></div>;
    }

    return (
        <div className="detail-container">
            <div className="detail-header">
                <h1>API Î¨∏ÏÑú Î™©Î°ù üìÑ</h1>
                <button onClick={() => setIsCreating(true)} className="add-api-doc-button">
                    + ÏÉà API Î¨∏ÏÑú Ï∂îÍ∞Ä
                </button>
            </div>

            {isCreating && (
                <div className="create-form-box">
                    <CreateApiDocForm
                        projectId={project_id}
                        onSuccess={handleCreateSuccess}
                        onCancel={() => setIsCreating(false)}
                    />
                </div>
            )}

            <div className="api-doc-list">
                {apiDocs.length > 0 ? (
                    apiDocs.map(doc => (
                        <div key={doc.id} className="api-doc-item-wrapper">
                            <div className="api-doc-item" onClick={() => handleToggleDetail(doc.id)}>
                                <div className="api-info">
                                    <span className={`api-method ${getMethodClass(doc.http_method)}`}>{doc.http_method}</span>
                                    <span className="api-url">{doc.url}</span>
                                </div>
                                <button className="toggle-button">
                                    {expandedDocId === doc.id ? 'Ïà®Í∏∞Í∏∞ ‚ñ≤' : 'ÏûêÏÑ∏Ìûà ‚ñº'}
                                </button>
                            </div>
                            {/* ‚ú® ÏàòÏ†ï: ÏÉÅÏÑ∏ Ï†ïÎ≥¥ ÌëúÏãú Î°úÏßÅ Î≥ÄÍ≤Ω */}
                            {expandedDocId === doc.id && (
                                <div className="api-doc-detail">
                                    {isDetailLoading && <p>ÏÉÅÏÑ∏ Ï†ïÎ≥¥Î•º Î∂àÎü¨Ïò§Îäî Ï§ë...</p>}
                                    {detailedDoc && !isDetailLoading && (
                                        <>
                                            {detailedDoc.description && (
                                                <p><strong>ÏÑ§Î™Ö:</strong> {detailedDoc.description}</p>
                                            )}
                                            
                                            {isObjectNotEmpty(detailedDoc.request_headers) && (
                                                <>
                                                    <h4>Request Headers</h4>
                                                    <pre>{JSON.stringify(detailedDoc.request_headers, null, 2)}</pre>
                                                </>
                                            )}

                                            {isObjectNotEmpty(detailedDoc.query_params) && (
                                                <>
                                                    <h4>Query Params</h4>
                                                    <pre>{JSON.stringify(detailedDoc.query_params, null, 2)}</pre>
                                                </>
                                            )}

                                            {isObjectNotEmpty(detailedDoc.request_format) && (
                                                <>
                                                    <h4>Request Body</h4>
                                                    <pre>{JSON.stringify(detailedDoc.request_format, null, 2)}</pre>
                                                </>
                                            )}
                                            
                                            {isObjectNotEmpty(detailedDoc.response_format) && (
                                                <>
                                                    <h4>Response Body</h4>
                                                    <pre>{JSON.stringify(detailedDoc.response_format, null, 2)}</pre>
                                                </>
                                            )}
                                        </>
                                    )}
                                </div>
                            )}
                        </div>
                    ))
                ) : (
                    !isCreating && <p>Ïù¥ ÌîÑÎ°úÏ†ùÌä∏Ïóê ÏûëÏÑ±Îêú API Î¨∏ÏÑúÍ∞Ä ÏóÜÏäµÎãàÎã§. ÏÉàÎ°ú Ï∂îÍ∞ÄÌï¥Î≥¥ÏÑ∏Ïöî!</p>
                )}
            </div>
        </div>
    );
};

export default ProjectDetailPage;
